/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LocalManagerRole;

import Business.EcoSystem;
import Business.Employee.Consumer.Consumer;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.LocalEnergy.LocalManagerEnergyOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utils.MyIntegerVerifier;
import Business.Utils.MyStringVerifier;
import Business.WorkQueue.GlobalManagerToLocalManager.SetConsumerWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author neera
 */
public class LocalManagerSettingConsumerParameters extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    //Self user Acount
    private UserAccount userAccount;
    private LocalManagerEnergyOrganization LocalOrganization;
    private Consumer consumer;
    private SetConsumerWorkRequest setConsumerWorkRequests;
    private UUID uuid;
    private boolean isConsumerIdPressed;
    private boolean isSensorIdPressed;

    /**
     * Creates new form LocalManagerSettingConsumerParameters
     */
    public LocalManagerSettingConsumerParameters(JPanel userProcessContainer, UserAccount account, SetConsumerWorkRequest setConsumerWorkRequests, Consumer consumer, Organization organization, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.LocalOrganization = (LocalManagerEnergyOrganization) organization;
        this.setConsumerWorkRequests = setConsumerWorkRequests;
        this.consumer = consumer;
        isConsumerIdPressed = false;
        isSensorIdPressed = false;
        populateTheFields();

    }

    public void populateTheFields() {

        txtLocalAreaCode.setText(String.valueOf(consumer.getLocalAreaCode()));
        txtConsumerId.setText(consumer.getConsumerId());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtLocalAreaCode = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtConsumerId = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Set Consumer parameters");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 16, -1, -1));

        jLabel2.setText("Local Area Code");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 122, -1, -1));

        jLabel3.setText("Consumer Id");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 87, -1, -1));
        add(txtLocalAreaCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 119, 197, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 253, -1, -1));

        btnBack.setText("<<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 253, -1, -1));
        add(txtConsumerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 84, 197, -1));
    }// </editor-fold>//GEN-END:initComponents

    public boolean checkIfConsumerIsGivenUniqueSensorID(String sensorId) {

        for (Network n : business.getNetworkList()) {
            for (Enterprise ent : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                    for (Employee emp : org.getEmployeeDirectory().getEmployeeList()) {
                        if (emp instanceof Consumer) {
                            try {
                                if (((Consumer) emp).getSensor().getUniqueSensorId().equals(sensorId)) {
                                    return false;
                                }

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "No Sensor Id Setting new one");
                                break;
                            }

                        }
                    }

                }
            }

        }
        return true;
    }

    public boolean checkIfConsumerIsGivenUniqueId(String consumerId) {

        for (Network n : business.getNetworkList()) {
            for (Enterprise ent : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                    for (Employee emp : org.getEmployeeDirectory().getEmployeeList()) {
                        if (emp instanceof Consumer) {
                            try {
                                if (((Consumer) emp).getConsumerId().equals(consumerId)) {
                                    return false;
                                }

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "No Consumer Id Setting new one");
                                break;
                            }

                        }
                    }

                }
            }

        }
        return true;
    }


    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        //Check the Codes it should be unique

        MyIntegerVerifier myIntegerVerifier = new MyIntegerVerifier();
        MyStringVerifier myStringVerifier = new MyStringVerifier();
        if (txtConsumerId.getText().isEmpty() || txtLocalAreaCode.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields are mandotary");
            return;
        }
        if (myIntegerVerifier.verify(txtLocalAreaCode) && myStringVerifier.verify(txtConsumerId)) {

            int localAreaCode = Integer.parseInt(txtLocalAreaCode.getText());

            if (checkIfConsumerIsGivenUniqueId(txtConsumerId.getText())) {
                consumer.setConsumerId(txtConsumerId.getText());

            } else {
                JOptionPane.showMessageDialog(null, "Not unique Consumer Id");
                return;
            }

            consumer.setLocalAreaCode(localAreaCode);
            setConsumerWorkRequests.setReceiver(userAccount);
            setConsumerWorkRequests.setMessage("Consumer Information Updated ready for acces to LocalEnergy");
            JOptionPane.showMessageDialog(null, "The consumer" + setConsumerWorkRequests.getConsumer() + "is updated!");

        }


    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LocalManagerWorkAreaJPanel dwjp = (LocalManagerWorkAreaJPanel) component;
        dwjp.populateConsumerTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtConsumerId;
    private javax.swing.JTextField txtLocalAreaCode;
    // End of variables declaration//GEN-END:variables
}
