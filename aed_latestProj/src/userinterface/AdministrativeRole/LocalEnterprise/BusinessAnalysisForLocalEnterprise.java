/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole.LocalEnterprise;

import Business.Employee.Consumer.Battery;
import Business.LocalEnergy.CommunitySensor;
import Business.Organization.LocalEnergy.LocalAreaOrganization;
import Business.Organization.LocalEnergy.LocalManagerEnergyOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LocalOrganizationToLocalManager.LocalOrganizationToLocalManagerSetLocalEnergyWR;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;

/**
 *
 * @author neera
 */
public class BusinessAnalysisForLocalEnterprise extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;

    /**
     * Creates new form BusinessAnalysisForLocalEnterprise
     */
    public BusinessAnalysisForLocalEnterprise(JPanel userProcessContainer, OrganizationDirectory directory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.directory = directory;

        populateJComboBox();

    }

    private void populateBatteryNumberTable(Organization organization) {
        DefaultTableModel model = (DefaultTableModel) localManagerBatteryCountTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof LocalOrganizationToLocalManagerSetLocalEnergyWR) {
                Object[] row = new Object[2];
                row[0] = ((LocalOrganizationToLocalManagerSetLocalEnergyWR) request).getSender();
                row[1] = ((LocalOrganizationToLocalManagerSetLocalEnergyWR) request).getLocalEnergy().getLocalAreabattery().getLocalbatteryList().size();

                model.addRow(row);
            }
        }

    }

    private void populateBatteryAnalysisTable(Organization org) {
        DefaultTableModel model = (DefaultTableModel) tblLocalBatteryLogs.getModel();

        model.setRowCount(0);

        if (org instanceof LocalManagerEnergyOrganization) {
            for (Map.Entry<Date, Integer> entry : ((LocalManagerEnergyOrganization) org).getCommunitySensor().getLocalEnergyBatteryList().entrySet()) {
                Object[] row = new Object[2];
                row[0] = entry.getKey();
                row[1] = entry.getValue();
                model.addRow(row);
            }

        }

    }

    public void populateJComboBox() {
        for (Organization org : directory.getOrganizationList()) {
            if (org instanceof LocalManagerEnergyOrganization) {
                lmanCombo.addItem(org);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        localManagerBatteryCountTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lmanCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLocalBatteryLogs = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnSelectLman = new javax.swing.JButton();
        btnShowBarChart = new javax.swing.JButton();
        btnShowBarChart1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        localManagerBatteryCountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Local Organization", "Number of Batteries"
            }
        ));
        jScrollPane1.setViewportView(localManagerBatteryCountTable);

        jLabel1.setText("Local Enterprise Dashboard");

        tblLocalBatteryLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DateTime", "Battery Charge Remaining"
            }
        ));
        jScrollPane2.setViewportView(tblLocalBatteryLogs);

        jLabel3.setText("Local Manager Organization");

        btnSelectLman.setText("Select");
        btnSelectLman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectLmanActionPerformed(evt);
            }
        });

        btnShowBarChart.setText("Show TimeLine Chart");
        btnShowBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowBarChartActionPerformed(evt);
            }
        });

        btnShowBarChart1.setText("Show Bar Chart");
        btnShowBarChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowBarChart1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of Batteries used Analysis");

        jLabel5.setText("Battery Voltage remaining per timestamp");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lmanCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSelectLman, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel5)
                        .addGap(297, 297, 297)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(btnShowBarChart)
                        .addGap(408, 408, 408)
                        .addComponent(btnShowBarChart1)))
                .addContainerGap(1031, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lmanCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectLman))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowBarChart1)
                    .addComponent(btnShowBarChart))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectLmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectLmanActionPerformed
        // TODO add your handling code here:

        try {
            LocalManagerEnergyOrganization locMan = (LocalManagerEnergyOrganization) lmanCombo.getSelectedItem();
            populateBatteryAnalysisTable(locMan);
            populateBatteryNumberTable(locMan);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The Enterprise should be populated.");
        }
    }//GEN-LAST:event_btnSelectLmanActionPerformed

    private void btnShowBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowBarChartActionPerformed
        // TODO add your handling code here:
        try {
            LocalManagerEnergyOrganization locMan = (LocalManagerEnergyOrganization) lmanCombo.getSelectedItem();
            populateBatteryAnalysisChart(locMan);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The Enterprise should be populated.");
        }


    }//GEN-LAST:event_btnShowBarChartActionPerformed

    private void populateBatteryAnalysisChart(Organization org) {

        TimeSeries s1 = new TimeSeries("Local Area Battery Voltage drop");
        TimeSeriesCollection dataset = new TimeSeriesCollection();
        final JFreeChart chart = ChartFactory.createTimeSeriesChart("Voltage vs Time in Local Area Battery",
                "Timestamp",
                "Voltage", dataset,
                true,
                true,
                false);
        ChartFrame frame = new ChartFrame("XY Chart For Analysis", chart);
        frame.setVisible(true);
        frame.setSize(800, 680);
        XYPlot p = chart.getXYPlot();
        p.setRangeGridlinePaint(Color.BLACK);

        if (org instanceof LocalManagerEnergyOrganization) {
            for (Map.Entry<Date, Integer> entry : ((LocalManagerEnergyOrganization) org).getCommunitySensor().getLocalEnergyBatteryList().entrySet()) {
                s1.add(new Millisecond(entry.getKey()), entry.getValue());

            }

        }
        dataset.addSeries(s1);

    }
    private void btnShowBarChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowBarChart1ActionPerformed
        // TODO add your handling code here:
        try {
            LocalManagerEnergyOrganization locMan = (LocalManagerEnergyOrganization) lmanCombo.getSelectedItem();
            populateBatteryAnalysisChart(locMan);
            populateBatteryNumberChart(locMan);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "The Enterprise should be populated.");
        }


    }//GEN-LAST:event_btnShowBarChart1ActionPerformed

    private void populateBatteryNumberChart(Organization organization) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        final JFreeChart chart = ChartFactory.createBarChart("Number of Batteries by Local Manager Shown",
                "Local Manager",
                "Number of batteries",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);
        ChartFrame frame = new ChartFrame("Bar Chart For Analysis", chart);
        frame.setVisible(true);
        frame.setSize(800, 680);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof LocalOrganizationToLocalManagerSetLocalEnergyWR) {

                UserAccount sender = ((LocalOrganizationToLocalManagerSetLocalEnergyWR) request).getSender();

                int numberOfBatteries = ((LocalOrganizationToLocalManagerSetLocalEnergyWR) request).getLocalEnergy().getLocalAreabattery().getLocalbatteryList().size();
                dataset.addValue(numberOfBatteries, sender.getUsername(), "LocalManager");

            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectLman;
    private javax.swing.JButton btnShowBarChart;
    private javax.swing.JButton btnShowBarChart1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox lmanCombo;
    private javax.swing.JTable localManagerBatteryCountTable;
    private javax.swing.JTable tblLocalBatteryLogs;
    // End of variables declaration//GEN-END:variables
}
