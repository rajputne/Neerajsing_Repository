/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole.LocalEnterprise.LocalOrganization;

import Business.Employee.Consumer.Battery;
import Business.LocalEnergy.LocalEnergy;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.LocalEnergy.CommunitySensor;
import Business.Organization.LocalEnergy.LocalAreaOrganization;
import Business.Organization.LocalEnergy.LocalManagerEnergyOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.Utils.MyIntegerVerifier;
import Business.WorkQueue.LocalOrganizationToLocalManager.LocalOrganizationToLocalManagerSetLocalEnergyWR;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author neera
 */
public class ManageLocalAreaBatteries extends javax.swing.JPanel {

    /**
     * Creates new form ManageLocalAreaBatteries
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount account;
    
    public ManageLocalAreaBatteries(JPanel userProcessContainer, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        populateRequestTable();
    }
    
    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) LocalOrganiztionRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = ((LocalOrganizationToLocalManagerSetLocalEnergyWR) request).getLocalEnergy().getLocalAreabattery().getNumberOfBatteries();
            row[1] = request.getMessage();
            row[2] = request.getSender();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBattery = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        LocalOrganiztionRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtBattery, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 134, 184, -1));

        jLabel1.setText("Enter number of Batteries");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 137, -1, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 198, -1, -1));

        LocalOrganiztionRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Battery No.", "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LocalOrganiztionRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 640, 160));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Local Organization Send Batteries");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 34, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        MyIntegerVerifier myIntegerVerifier = new MyIntegerVerifier();
        
        if (myIntegerVerifier.verify(txtBattery)) {
            LocalOrganizationToLocalManagerSetLocalEnergyWR setLocalEnergyToCommSensor = new LocalOrganizationToLocalManagerSetLocalEnergyWR();
            LocalManagerEnergyOrganization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof LocalManagerEnergyOrganization) {
                    org = (LocalManagerEnergyOrganization) organization;
                    int numberOfBatteries = Integer.parseInt(txtBattery.getText());
                    
                    for (int i = 0; i < numberOfBatteries; i++) {
                        Battery battery = setLocalEnergyToCommSensor.getLocalEnergy().getLocalAreabattery().addLocalBattery();
                        battery.setBatteryVolts(CommunitySensor.MAX_VOLTAGE);
                    }
                    setLocalEnergyToCommSensor.setSender(account);
                    setLocalEnergyToCommSensor.setStatus("Sent");
                    setLocalEnergyToCommSensor.setMessage("The Local Area Battery for use");
                    setLocalEnergyToCommSensor.getLocalEnergy().getLocalAreabattery().setNumberOfBatteries(numberOfBatteries);
                    org.getWorkQueue().getWorkRequestList().add(setLocalEnergyToCommSensor);
                    account.getWorkQueue().getWorkRequestList().add(setLocalEnergyToCommSensor);
                }
            }
        }
        populateRequestTable();
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LocalOrganiztionRequestJTable;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBattery;
    // End of variables declaration//GEN-END:variables
}
