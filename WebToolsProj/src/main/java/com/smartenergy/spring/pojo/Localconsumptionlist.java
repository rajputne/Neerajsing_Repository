package com.smartenergy.spring.pojo;
// Generated Apr 23, 2016 4:00:35 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Localconsumptionlist generated by hbm2java
 */
@Entity
@Table(name = "localconsumptionlist", catalog = "smartenergy5")
public class Localconsumptionlist implements java.io.Serializable {

	private LocalconsumptionlistId id;
	private Localenergyservices localenergyservices;
	private Consumer consumer;
	private float localVoltageConsumed;
	private float chargedAmount;
	private Date dateTimeVolatgeConsumed;

	public Localconsumptionlist() {
	}

	public Localconsumptionlist(LocalconsumptionlistId id, Localenergyservices localenergyservices, Consumer consumer,
			float localVoltageConsumed, float chargedAmount, Date dateTimeVolatgeConsumed) {
		this.id = id;
		this.localenergyservices = localenergyservices;
		this.consumer = consumer;
		this.localVoltageConsumed = localVoltageConsumed;
		this.chargedAmount = chargedAmount;
		this.dateTimeVolatgeConsumed = dateTimeVolatgeConsumed;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "localConsumptionId", column = @Column(name = "LocalConsumptionId", nullable = false)),
			@AttributeOverride(name = "localServicesId", column = @Column(name = "LocalServicesId", nullable = false)),
			@AttributeOverride(name = "localEnergyVendorId", column = @Column(name = "LocalEnergyVendorId", nullable = false)),
			@AttributeOverride(name = "consumerId", column = @Column(name = "ConsumerId", nullable = false)) })
	public LocalconsumptionlistId getId() {
		return this.id;
	}

	public void setId(LocalconsumptionlistId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "LocalServicesId", referencedColumnName = "LocalServicesId", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LocalEnergyVendorId", referencedColumnName = "LocalEnergyVendorId", nullable = false, insertable = false, updatable = false) })
	public Localenergyservices getLocalenergyservices() {
		return this.localenergyservices;
	}

	public void setLocalenergyservices(Localenergyservices localenergyservices) {
		this.localenergyservices = localenergyservices;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ConsumerId", nullable = false, insertable = false, updatable = false)
	public Consumer getConsumer() {
		return this.consumer;
	}

	public void setConsumer(Consumer consumer) {
		this.consumer = consumer;
	}

	@Column(name = "LocalVoltageConsumed", nullable = false, precision = 12, scale = 0)
	public float getLocalVoltageConsumed() {
		return this.localVoltageConsumed;
	}

	public void setLocalVoltageConsumed(float localVoltageConsumed) {
		this.localVoltageConsumed = localVoltageConsumed;
	}

	@Column(name = "ChargedAmount", nullable = false, precision = 12, scale = 0)
	public float getChargedAmount() {
		return this.chargedAmount;
	}

	public void setChargedAmount(float chargedAmount) {
		this.chargedAmount = chargedAmount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DateTimeVolatgeConsumed", nullable = false, length = 10)
	public Date getDateTimeVolatgeConsumed() {
		return this.dateTimeVolatgeConsumed;
	}

	public void setDateTimeVolatgeConsumed(Date dateTimeVolatgeConsumed) {
		this.dateTimeVolatgeConsumed = dateTimeVolatgeConsumed;
	}

}
