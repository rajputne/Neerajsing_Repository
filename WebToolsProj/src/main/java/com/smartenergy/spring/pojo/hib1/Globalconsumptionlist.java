package com.smartenergy.spring.pojo.hib1;
// Generated Apr 17, 2016 9:30:39 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Globalconsumptionlist generated by hbm2java
 */
@Entity
@Table(name = "globalconsumptionlist", catalog = "smartenergy2", uniqueConstraints = @UniqueConstraint(columnNames = "PowerConsumed"))
public class Globalconsumptionlist implements java.io.Serializable {

	private GlobalconsumptionlistId id;
	private Globalservices globalservices;
	private Consumer consumer;
	private float powerConsumed;
	private Date fromDate;
	private Date toDate;
	private float rate;
	private float chargedAmount;

	public Globalconsumptionlist() {
	}

	public Globalconsumptionlist(GlobalconsumptionlistId id, Globalservices globalservices, Consumer consumer,
			float powerConsumed, Date fromDate, Date toDate, float rate, float chargedAmount) {
		this.id = id;
		this.globalservices = globalservices;
		this.consumer = consumer;
		this.powerConsumed = powerConsumed;
		this.fromDate = fromDate;
		this.toDate = toDate;
		this.rate = rate;
		this.chargedAmount = chargedAmount;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "consumerId", column = @Column(name = "ConsumerId", nullable = false)),
			@AttributeOverride(name = "globalServiceId", column = @Column(name = "GlobalServiceId", nullable = false)),
			@AttributeOverride(name = "globalVendorId", column = @Column(name = "GlobalVendorId", nullable = false)) })
	public GlobalconsumptionlistId getId() {
		return this.id;
	}

	public void setId(GlobalconsumptionlistId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "GlobalServiceId", referencedColumnName = "GlobalServiceId", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "GlobalVendorId", referencedColumnName = "GlobalVendorId", nullable = false, insertable = false, updatable = false) })
	public Globalservices getGlobalservices() {
		return this.globalservices;
	}

	public void setGlobalservices(Globalservices globalservices) {
		this.globalservices = globalservices;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ConsumerId", nullable = false, insertable = false, updatable = false)
	public Consumer getConsumer() {
		return this.consumer;
	}

	public void setConsumer(Consumer consumer) {
		this.consumer = consumer;
	}

	@Column(name = "PowerConsumed", unique = true, nullable = false, precision = 12, scale = 0)
	public float getPowerConsumed() {
		return this.powerConsumed;
	}

	public void setPowerConsumed(float powerConsumed) {
		this.powerConsumed = powerConsumed;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fromDate", nullable = false, length = 10)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "toDate", nullable = false, length = 10)
	public Date getToDate() {
		return this.toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Column(name = "Rate", nullable = false, precision = 12, scale = 0)
	public float getRate() {
		return this.rate;
	}

	public void setRate(float rate) {
		this.rate = rate;
	}

	@Column(name = "ChargedAmount", nullable = false, precision = 12, scale = 0)
	public float getChargedAmount() {
		return this.chargedAmount;
	}

	public void setChargedAmount(float chargedAmount) {
		this.chargedAmount = chargedAmount;
	}

}
