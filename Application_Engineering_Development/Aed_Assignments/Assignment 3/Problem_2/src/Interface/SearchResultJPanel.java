/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Patient;
import Business.Person;
import Business.PersonDirectory;
import Business.VitalSign;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neerajsing Rajput
 */
public class SearchResultJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchResultJPanel
     */
    private JPanel userProcessContainer;

    Person person;

    public SearchResultJPanel(JPanel upc, Person p) {
        userProcessContainer = upc;
        person = p;
        initComponents();
        populateForm();
        populateTable();
    }

    public void populateTable() {
        //Make table Empty
        DefaultTableModel dtm = (DefaultTableModel) vitalStatsTable.getModel();
        int rowCount = vitalStatsTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        for (VitalSign vs : person.getPatient().getVitalSignHistory().getVitalSignList()) {
            vs.setStatus(CheckRange(vs, person));
            Object row[] = new Object[2];
            row[0] = vs;
            row[1] = vs.getStatus();
            dtm.addRow(row);
        }
    }

    public String CheckRange(VitalSign vs, Person person) {
        String tempStatus = "";
        String normal = "Normal";
        String abnormal = "Abnormal";

        if (person.getAge() >= 1 && person.getAge() <= 3) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 80) && (vs.getHeartRate() <= 130)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 110)) && ((vs.getWeightInPounds() >= 22) && (vs.getWeightInPounds() <= 30))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (person.getAge() >= 4 && person.getAge() <= 5) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 80) && (vs.getHeartRate() <= 120)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 110)) && ((vs.getWeightInPounds() >= 31) && (vs.getWeightInPounds() <= 40))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (person.getAge() >= 6 && person.getAge() <= 12) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 70) && (vs.getHeartRate() <= 110)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 120)) && ((vs.getWeightInPounds() >= 41) && (vs.getWeightInPounds() <= 92))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (person.getAge() >= 13) {
            if ((vs.getRespiratoryRate() >= 12) && ((vs.getHeartRate() >= 55) && (vs.getHeartRate() <= 110)) && ((vs.getBloodPressure() >= 110) && (vs.getBloodPressure() <= 120)) && (vs.getWeightInPounds() >= 110)) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        }
        return tempStatus;
    }

    private void btnViewVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int selectedRow = vitalStatsTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectedRow, 0);
            txtRespiratoryRate.setText(String.valueOf(vs.getRespiratoryRate()));
            txtBloodPressure.setText(String.valueOf(vs.getBloodPressure()));
            txtHeartRate.setText(String.valueOf(vs.getHeartRate()));
            txtWeights.setText(String.valueOf(vs.getWeightInPounds()));
            txtTime.setText(vs.getDate().toString());
        } else {
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void populateForm() {
        txtPersonName.setText(person.getPersonName());
        txtPersonAge.setText(String.valueOf(person.getAge()));
        txtPatientID.setText(person.getPatient().getPatientID());
        txtDoctorName.setText(person.getPatient().getDoctorName());
        txtPharmacy.setText(person.getPatient().getPharmacy());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPersonName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPersonAge = new javax.swing.JTextField();
        btnBakc = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtWeights = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtRespiratoryRate = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalStatsTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        txtPharmacy = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnDeleteVitalsign = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(720, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Search Person");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 26, -1, -1));

        jLabel3.setText("Person name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 74, -1, -1));
        add(txtPersonName, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 74, 492, -1));

        jLabel4.setText("Person Age");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 140, -1, -1));
        add(txtPersonAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 137, 492, -1));

        btnBakc.setText("<<back");
        btnBakc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBakcActionPerformed(evt);
            }
        });
        add(btnBakc, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 190, -1, -1));

        jLabel9.setText("Blood Pressure");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 478, -1, -1));
        add(txtWeights, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 513, 148, -1));

        jLabel10.setText("Weight(lbs)");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 516, -1, -1));
        add(txtRespiratoryRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 399, 148, -1));
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 551, 148, -1));

        jLabel6.setText("Respiratory Rate");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 402, -1, -1));

        jLabel2.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel2.setText("View Vital Signs");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 219, -1, -1));

        vitalStatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Timestamp", "Status"
            }
        ));
        jScrollPane1.setViewportView(vitalStatsTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 268, 314, 92));

        jLabel11.setText("Time");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 554, -1, -1));
        add(txtHeartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 437, 148, -1));

        jLabel8.setText("Heart Rate");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 440, -1, -1));
        add(txtBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 475, 148, -1));

        jLabel7.setText("Doctor Name");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 306, -1, 20));

        jLabel12.setText("Pharmacy");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 347, -1, -1));
        add(txtDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 306, 146, -1));
        add(txtPharmacy, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 344, 146, -1));
        add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 268, 142, -1));

        jLabel14.setText("Patient ID");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 271, -1, -1));

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 366, -1, -1));

        btnDeleteVitalsign.setText("Delete");
        btnDeleteVitalsign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteVitalsignActionPerformed(evt);
            }
        });
        add(btnDeleteVitalsign, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 366, -1, -1));

        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        add(btnModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 366, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBakcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBakcActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        //This helps layout manager pointing to the next layout
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBakcActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = vitalStatsTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectedRow, 0);
            txtRespiratoryRate.setText(String.valueOf(vs.getRespiratoryRate()));
            txtBloodPressure.setText(String.valueOf(vs.getBloodPressure()));
            txtHeartRate.setText(String.valueOf(vs.getHeartRate()));
            txtWeights.setText(String.valueOf(vs.getWeightInPounds()));
            txtTime.setText(vs.getDate().toString());

        } else {
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:


    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteVitalsignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteVitalsignActionPerformed
        // TODO add your handling code here:
        int selectRow = vitalStatsTable.getSelectedRow();
        if (selectRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            //1.show whether you want to delete the vital sign 
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete Vital Sign?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectRow, 0);
                person.getPatient().getVitalSignHistory().deleteVitalSing(vs);
                populateTable();
                boolean resetFieldCondition = (vs.getBloodPressure() == Integer.parseInt(txtBloodPressure.getText()))
                        && (vs.getHeartRate() == Integer.parseInt(txtHeartRate.getText()))
                        && (vs.getRespiratoryRate() == Integer.parseInt(txtRespiratoryRate.getText()))
                        && (vs.getWeightInPounds() == Integer.parseInt(txtWeights.getText()));
                if (resetFieldCondition) {
                    resetFields();
                }
            }
        } else {
            //2. Its a message box
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteVitalsignActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        int selectedRow = vitalStatsTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectedRow, 0);
            ViewVitalSignJPanel panel = new ViewVitalSignJPanel(userProcessContainer, vs);
            userProcessContainer.add("ViewVitalSignJPanel", panel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnModifyActionPerformed

    public void resetFields() {
        txtBloodPressure.setText("");
        txtHeartRate.setText("");
        txtRespiratoryRate.setText("");
        txtWeights.setText("");
        txtTime.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBakc;
    private javax.swing.JButton btnDeleteVitalsign;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPersonAge;
    private javax.swing.JTextField txtPersonName;
    private javax.swing.JTextField txtPharmacy;
    private javax.swing.JTextField txtRespiratoryRate;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtWeights;
    private javax.swing.JTable vitalStatsTable;
    // End of variables declaration//GEN-END:variables
}
