/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Patient;
import Business.VitalSign;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neerajsing Rajput
 */
public class ViewJPanelVitalSigns extends javax.swing.JPanel {

    Patient patient;

    /**
     * Creates new form ViewJPanelVitalSigns
     */
    public ViewJPanelVitalSigns(Patient patient) {
        initComponents();
        this.patient = patient;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalStatsTable = new javax.swing.JTable();
        btnViewVitalSigns = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        txtWeights = new javax.swing.JTextField();
        txtRespiratoryRate = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel1.setText("View Vital Signs");

        vitalStatsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Timestamp", "Status"
            }
        ));
        jScrollPane1.setViewportView(vitalStatsTable);

        btnViewVitalSigns.setText("View");
        btnViewVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewVitalSignsActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel8.setText("Heart Rate");

        jLabel9.setText("Blood Pressure");

        jLabel10.setText("Weight(lbs)");

        jLabel11.setText("Time");

        jLabel6.setText("Respiratory Rate");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnViewVitalSigns)
                                    .addComponent(btnDelete))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel8)
                                                    .addGap(33, 33, 33)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(15, 15, 15)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(31, 31, 31)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(64, 64, 64)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtWeights)
                                        .addComponent(txtBloodPressure)
                                        .addComponent(txtHeartRate)
                                        .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnViewVitalSigns)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtRespiratoryRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtWeights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable() {
        //Make table Empty
        DefaultTableModel dtm = (DefaultTableModel) vitalStatsTable.getModel();
        int rowCount = vitalStatsTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
        for (VitalSign vs : patient.getVitalSignHistory().getVitalSignList()) {
            vs.setStatus(CheckRange(vs, patient));
            Object row[] = new Object[2];
            row[0] = vs;
            row[1] = vs.getStatus();
            dtm.addRow(row);
        }
    }

    public String CheckRange(VitalSign vs, Patient patient) {
        String tempStatus = "";
        String normal = "Normal";
        String abnormal = "Abnormal";

        if (patient.getAge() >= 1 && patient.getAge() <= 3) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 80) && (vs.getHeartRate() <= 130)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 110)) && ((vs.getWeightInPounds() >= 22) && (vs.getWeightInPounds() <= 30))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (patient.getAge() >= 4 && patient.getAge() <= 5) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 80) && (vs.getHeartRate() <= 120)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 110)) && ((vs.getWeightInPounds() >= 31) && (vs.getWeightInPounds() <= 40))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (patient.getAge() >= 6 && patient.getAge() <= 12) {
            if ((vs.getRespiratoryRate() >= 20 && vs.getRespiratoryRate() <= 30) && ((vs.getHeartRate() >= 70) && (vs.getHeartRate() <= 110)) && ((vs.getBloodPressure() >= 80) && (vs.getBloodPressure() <= 120)) && ((vs.getWeightInPounds() >= 41) && (vs.getWeightInPounds() <= 92))) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } else if (patient.getAge() >= 13) {
            if ((vs.getRespiratoryRate() >= 12) && ((vs.getHeartRate() >= 55) && (vs.getHeartRate() <= 110)) && ((vs.getBloodPressure() >= 110) && (vs.getBloodPressure() <= 120)) && (vs.getWeightInPounds() >= 110)) {
                tempStatus = normal;
            } else {
                tempStatus = abnormal;
            }
        } 
        return tempStatus;
    }
    private void btnViewVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewVitalSignsActionPerformed
        // TODO add your handling code here:
        int selectedRow = vitalStatsTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectedRow, 0);
            txtRespiratoryRate.setText(String.valueOf(vs.getRespiratoryRate()));
            txtBloodPressure.setText(String.valueOf(vs.getBloodPressure()));
            txtHeartRate.setText(String.valueOf(vs.getHeartRate()));
            txtWeights.setText(String.valueOf(vs.getWeightInPounds()));
            txtTime.setText(vs.getDate().toString());
        } else {
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewVitalSignsActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
   
        int selectRow = vitalStatsTable.getSelectedRow();
        if (selectRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            //1.show whether you want to delete the vital sign 
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete Vital Sign?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                VitalSign vs = (VitalSign) vitalStatsTable.getValueAt(selectRow, 0);
                patient.getVitalSignHistory().deleteVitalSing(vs);
                populateTable();
                resetFields();
            }
        } else {
            //2. Its a message box
            JOptionPane.showMessageDialog(null, "Please selcet a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    public void resetFields() {
        txtBloodPressure.setText("");
        txtHeartRate.setText("");
        txtRespiratoryRate.setText("");
        txtWeights.setText("");
        txtTime.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewVitalSigns;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtRespiratoryRate;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtWeights;
    private javax.swing.JTable vitalStatsTable;
    // End of variables declaration//GEN-END:variables
}
